/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    orders: Order;
    collections: Collection;
    products: Product;
    users: User;
    campaigns: Campaign;
    media: Media;
    policies: Policy;
    'gift-cards': GiftCard;
    themes: Theme;
    carts: Cart;
    'hero-page': HeroPage;
    'footer-page': FooterPage;
    'privacy-policy-page': PrivacyPolicyPage;
    'terms-and-conditions-page': TermsAndConditionsPage;
    'support-page': SupportPage;
    pages: Page;
    plugins: Plugin;
    payments: Payment;
    locations: Location;
    shipping: Shipping;
    'checkout-sessions': CheckoutSession;
    forms: Form;
    'form-submissions': FormSubmission;
    'cj-settings': CjSetting;
    exports: Export;
    'email-templates': EmailTemplate;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    collections: {
      products: 'products';
    };
  };
  collectionsSelect: {
    orders: OrdersSelect<false> | OrdersSelect<true>;
    collections: CollectionsSelect<false> | CollectionsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    campaigns: CampaignsSelect<false> | CampaignsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    policies: PoliciesSelect<false> | PoliciesSelect<true>;
    'gift-cards': GiftCardsSelect<false> | GiftCardsSelect<true>;
    themes: ThemesSelect<false> | ThemesSelect<true>;
    carts: CartsSelect<false> | CartsSelect<true>;
    'hero-page': HeroPageSelect<false> | HeroPageSelect<true>;
    'footer-page': FooterPageSelect<false> | FooterPageSelect<true>;
    'privacy-policy-page': PrivacyPolicyPageSelect<false> | PrivacyPolicyPageSelect<true>;
    'terms-and-conditions-page': TermsAndConditionsPageSelect<false> | TermsAndConditionsPageSelect<true>;
    'support-page': SupportPageSelect<false> | SupportPageSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    plugins: PluginsSelect<false> | PluginsSelect<true>;
    payments: PaymentsSelect<false> | PaymentsSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    shipping: ShippingSelect<false> | ShippingSelect<true>;
    'checkout-sessions': CheckoutSessionsSelect<false> | CheckoutSessionsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'cj-settings': CjSettingsSelect<false> | CjSettingsSelect<true>;
    exports: ExportsSelect<false> | ExportsSelect<true>;
    'email-templates': EmailTemplatesSelect<false> | EmailTemplatesSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'store-settings': StoreSetting;
    'main-menu': MainMenu;
  };
  globalsSelect: {
    'store-settings': StoreSettingsSelect<false> | StoreSettingsSelect<true>;
    'main-menu': MainMenuSelect<false> | MainMenuSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      createCollectionExport: TaskCreateCollectionExport;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderId: string;
  totalAmount: number;
  user?: (number | null) | User;
  cart?: (number | null) | Cart;
  source?: ('manual' | 'cj') | null;
  currency: string;
  paymentStatus: 'pending' | 'paid' | 'failed' | 'refunded';
  orderStatus: 'pending' | 'processing' | 'shipped' | 'delivered' | 'canceled';
  payment?: (number | null) | Payment;
  shipping?: (number | null) | Shipping;
  paymentIntentId?: string | null;
  sessionId?: string | null;
  sessionUrl?: string | null;
  paymentMethod?: string | null;
  receiptUrl?: string | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  shippingAddress?: {
    name?: string;
    address?: {
      city?: string;
      country?: string;
      line1?: string;
      line2?: string;
      postal_code?: string;
      state?: string;
      street?: string;
      [k: string]: unknown;
    };
    phone?: string;
    [k: string]: unknown;
  };
  billingAddress?: {
    name?: string;
    address?: {
      city?: string;
      country?: string;
      line1?: string;
      line2?: string;
      postal_code?: string;
      state?: string;
      [k: string]: unknown;
    };
    email?: string;
    phone?: string;
    [k: string]: unknown;
  };
  /**
   * Track important order events (e.g. status changes, payments, shipments, notes).
   */
  timeline?:
    | {
        title: string;
        date: string;
        type:
          | 'note'
          | 'order_created'
          | 'order_paid'
          | 'order_cancelled'
          | 'refund_issued'
          | 'fulfillment_started'
          | 'shipped'
          | 'delivered'
          | 'return_requested'
          | 'return_completed'
          | 'other';
        createdBy?: (number | null) | User;
        details?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  roles?: ('admin' | 'customer')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts".
 */
export interface Cart {
  id: number;
  sessionId?: string | null;
  customer?: (number | null) | User;
  cartItems?:
    | {
        variantId: string;
        product: number | Product;
        quantity: number;
        id?: string | null;
      }[]
    | null;
  completed?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  pid?: string | null;
  title: string;
  currency?: string | null;
  visible?: boolean | null;
  /**
   * Choose where this product should be available to customers.
   */
  salesChannels?: ('all' | 'onlineStore' | 'pos' | 'mobileApp')[] | null;
  source?: ('manual' | 'cj') | null;
  description: string;
  collections?: (number | Collection)[] | null;
  handle?: string | null;
  /**
   * Choose the options for this product.
   */
  variantOptions?:
    | {
        option: string;
        /**
         * (press enter to add multiple values)
         */
        value: string[];
        id?: string | null;
      }[]
    | null;
  variants: {
    vid?: string | null;
    sku?: string | null;
    imageUrl?: string | null;
    gallery?: (number | Media)[] | null;
    price: number;
    originalPrice?: number | null;
    stockCount?: number | null;
    options?:
      | {
          option: string;
          value: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  /**
   * Add additional product info such as care instructions, materials, or sizing notes.
   */
  customFields?:
    | {
        name: string;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections".
 */
export interface Collection {
  id: number;
  title: string;
  description: string;
  imageUrl?: string | null;
  handle?: string | null;
  products?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments".
 */
export interface Payment {
  id: number;
  name: string;
  enabled?: boolean | null;
  providers?:
    | (
        | {
            methodType: 'cod' | 'bankTransfer' | 'inStore' | 'other';
            /**
             * Shown to customers at checkout.
             */
            instructions: string;
            details?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'manual';
          }
        | {
            providerName: string;
            testMode?: boolean | null;
            methodType?: ('card' | 'ach' | 'auto') | null;
            stripeSecretKey: string;
            stripeWebhooksEndpointSecret: string;
            publishableKey: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'stripe';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shipping".
 */
export interface Shipping {
  id: number;
  name: string;
  enabled?: boolean | null;
  location?: (number | null) | Location;
  /**
   * Select a shipping provider
   */
  shippingProvider?:
    | {
        baseRate: number;
        /**
         * If set, shipping is free for orders above this amount.
         */
        freeShippingMinOrder?: number | null;
        /**
         * Example: '3-5 business days'
         */
        estimatedDeliveryDays?: string | null;
        /**
         * Visible to customers if needed.
         */
        notes?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'custom-shipping';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  address: string;
  /**
   * @minItems 2
   * @maxItems 2
   */
  coordinates?: [number, number] | null;
  contactPhone?: string | null;
  /**
   * e.g., Mon-Fri: 9am - 6pm
   */
  hours?: string | null;
  enabled?: boolean | null;
  isPickupLocation?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns".
 */
export interface Campaign {
  id: number;
  name: string;
  type: 'email' | 'sms';
  status?: ('draft' | 'scheduled' | 'sent' | 'paused') | null;
  subject?: string | null;
  emailTemplate?: (number | null) | EmailTemplate;
  profile?: {
    from?: string | null;
    replyTo?: string | null;
  };
  /**
   * Optional variables for template rendering. Here admin keys that you can use: name, picture, user, issuerName, scope, sub.
   */
  templateData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Select the users who will receive this campaign.
   */
  recipients?: (number | User)[] | null;
  metrics?: {
    sent?: number | null;
    opened?: number | null;
    clicked?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates".
 */
export interface EmailTemplate {
  id: number;
  name?: string | null;
  html?: string | null;
  json?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies".
 */
export interface Policy {
  id: number;
  title: string;
  description?: string | null;
  handle?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gift-cards".
 */
export interface GiftCard {
  id: number;
  code: string;
  value: number;
  customer?: (number | null) | User;
  /**
   * Date gift card will expire
   */
  expiryDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "themes".
 */
export interface Theme {
  id: number;
  title?: string | null;
  editorMode: (
    | {
        builderIoPublicKey: string;
        builderIoPrivateKey: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'builder-io';
      }
    | {
        /**
         * Optional: Link to your live storefront. Press enter to add multiple values
         */
        storefrontUrls?: string[] | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'custom-storefront-block';
      }
  )[];
  /**
   * Explore top-rated free themes loved by store owners—designed to help you launch quickly and look great.
   */
  customStorefrontThemes?: {};
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero-page".
 */
export interface HeroPage {
  id: number;
  type: (
    | {
        title: string;
        subtitle?: string | null;
        ctaButtonText?: string | null;
        ctaButtonLink?: string | null;
        backgroundImage?: (number | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero';
      }
    | {
        title: string;
        subtitle?: string | null;
        featuredProducts?: (number | Media)[] | null;
        backgroundImage?: (number | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'carousel';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer-page".
 */
export interface FooterPage {
  id: number;
  type?:
    | {
        copyright: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'basic-footer';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy-page".
 */
export interface PrivacyPolicyPage {
  id: number;
  title: string;
  description?: string | null;
  handle?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-conditions-page".
 */
export interface TermsAndConditionsPage {
  id: number;
  title: string;
  description?: string | null;
  handle?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-page".
 */
export interface SupportPage {
  id: number;
  title: string;
  description?: string | null;
  handle?: string | null;
  name: string;
  email: string;
  message: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  form: number | Form;
  layout: {
    form: number | Form;
    enableIntro?: boolean | null;
    introContent?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'formBlock';
  }[];
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plugins".
 */
export interface Plugin {
  id: number;
  name?: string | null;
  description?: string | null;
  enabled?: boolean | null;
  pluginId?: string | null;
  svgIcon?: string | null;
  category?: string | null;
  author?: string | null;
  license?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkout-sessions".
 */
export interface CheckoutSession {
  id: number;
  sessionId?: string | null;
  customer?: (number | null) | User;
  cart: number | Cart;
  shipping?: (number | null) | Shipping;
  payment?: (number | null) | Payment;
  shippingAddress?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  billingAddress?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cj-settings".
 */
export interface CjSetting {
  id: number;
  emailAddress?: string | null;
  apiToken?: string | null;
  refreshToken?: string | null;
  refreshTokenExpiry?: string | null;
  accessToken?: string | null;
  accessTokenExpiry?: string | null;
  pod?: (number | null) | Media;
  /**
   * A list of product URLs to sync with CJ Dropshipping
   */
  items?:
    | {
        productUrl?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports".
 */
export interface Export {
  id: number;
  name?: string | null;
  format: 'csv' | 'json';
  limit?: number | null;
  sort?: string | null;
  drafts?: ('yes' | 'no') | null;
  selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
  fields?: string[] | null;
  collectionSlug: string;
  where?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'createCollectionExport';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'createCollectionExport') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'collections';
        value: number | Collection;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'campaigns';
        value: number | Campaign;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'policies';
        value: number | Policy;
      } | null)
    | ({
        relationTo: 'gift-cards';
        value: number | GiftCard;
      } | null)
    | ({
        relationTo: 'themes';
        value: number | Theme;
      } | null)
    | ({
        relationTo: 'carts';
        value: number | Cart;
      } | null)
    | ({
        relationTo: 'hero-page';
        value: number | HeroPage;
      } | null)
    | ({
        relationTo: 'footer-page';
        value: number | FooterPage;
      } | null)
    | ({
        relationTo: 'privacy-policy-page';
        value: number | PrivacyPolicyPage;
      } | null)
    | ({
        relationTo: 'terms-and-conditions-page';
        value: number | TermsAndConditionsPage;
      } | null)
    | ({
        relationTo: 'support-page';
        value: number | SupportPage;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'plugins';
        value: number | Plugin;
      } | null)
    | ({
        relationTo: 'payments';
        value: number | Payment;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'shipping';
        value: number | Shipping;
      } | null)
    | ({
        relationTo: 'checkout-sessions';
        value: number | CheckoutSession;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'cj-settings';
        value: number | CjSetting;
      } | null)
    | ({
        relationTo: 'exports';
        value: number | Export;
      } | null)
    | ({
        relationTo: 'email-templates';
        value: number | EmailTemplate;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderId?: T;
  totalAmount?: T;
  user?: T;
  cart?: T;
  source?: T;
  currency?: T;
  paymentStatus?: T;
  orderStatus?: T;
  payment?: T;
  shipping?: T;
  paymentIntentId?: T;
  sessionId?: T;
  sessionUrl?: T;
  paymentMethod?: T;
  receiptUrl?: T;
  metadata?: T;
  shippingAddress?: T;
  billingAddress?: T;
  timeline?:
    | T
    | {
        title?: T;
        date?: T;
        type?: T;
        createdBy?: T;
        details?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections_select".
 */
export interface CollectionsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  imageUrl?: T;
  handle?: T;
  products?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  pid?: T;
  title?: T;
  currency?: T;
  visible?: T;
  salesChannels?: T;
  source?: T;
  description?: T;
  collections?: T;
  handle?: T;
  variantOptions?:
    | T
    | {
        option?: T;
        value?: T;
        id?: T;
      };
  variants?:
    | T
    | {
        vid?: T;
        sku?: T;
        imageUrl?: T;
        gallery?: T;
        price?: T;
        originalPrice?: T;
        stockCount?: T;
        options?:
          | T
          | {
              option?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  customFields?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns_select".
 */
export interface CampaignsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  status?: T;
  subject?: T;
  emailTemplate?: T;
  profile?:
    | T
    | {
        from?: T;
        replyTo?: T;
      };
  templateData?: T;
  recipients?: T;
  metrics?:
    | T
    | {
        sent?: T;
        opened?: T;
        clicked?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies_select".
 */
export interface PoliciesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  handle?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gift-cards_select".
 */
export interface GiftCardsSelect<T extends boolean = true> {
  code?: T;
  value?: T;
  customer?: T;
  expiryDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "themes_select".
 */
export interface ThemesSelect<T extends boolean = true> {
  title?: T;
  editorMode?:
    | T
    | {
        'builder-io'?:
          | T
          | {
              builderIoPublicKey?: T;
              builderIoPrivateKey?: T;
              id?: T;
              blockName?: T;
            };
        'custom-storefront-block'?:
          | T
          | {
              storefrontUrls?: T;
              id?: T;
              blockName?: T;
            };
      };
  customStorefrontThemes?: T | {};
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts_select".
 */
export interface CartsSelect<T extends boolean = true> {
  sessionId?: T;
  customer?: T;
  cartItems?:
    | T
    | {
        variantId?: T;
        product?: T;
        quantity?: T;
        id?: T;
      };
  completed?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero-page_select".
 */
export interface HeroPageSelect<T extends boolean = true> {
  type?:
    | T
    | {
        hero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              ctaButtonText?: T;
              ctaButtonLink?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        carousel?:
          | T
          | {
              title?: T;
              subtitle?: T;
              featuredProducts?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer-page_select".
 */
export interface FooterPageSelect<T extends boolean = true> {
  type?:
    | T
    | {
        'basic-footer'?:
          | T
          | {
              copyright?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy-page_select".
 */
export interface PrivacyPolicyPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  handle?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-conditions-page_select".
 */
export interface TermsAndConditionsPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  handle?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-page_select".
 */
export interface SupportPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  handle?: T;
  name?: T;
  email?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  form?: T;
  layout?:
    | T
    | {
        formBlock?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plugins_select".
 */
export interface PluginsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  enabled?: T;
  pluginId?: T;
  svgIcon?: T;
  category?: T;
  author?: T;
  license?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments_select".
 */
export interface PaymentsSelect<T extends boolean = true> {
  name?: T;
  enabled?: T;
  providers?:
    | T
    | {
        manual?:
          | T
          | {
              methodType?: T;
              instructions?: T;
              details?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        stripe?:
          | T
          | {
              providerName?: T;
              testMode?: T;
              methodType?: T;
              stripeSecretKey?: T;
              stripeWebhooksEndpointSecret?: T;
              publishableKey?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  address?: T;
  coordinates?: T;
  contactPhone?: T;
  hours?: T;
  enabled?: T;
  isPickupLocation?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shipping_select".
 */
export interface ShippingSelect<T extends boolean = true> {
  name?: T;
  enabled?: T;
  location?: T;
  shippingProvider?:
    | T
    | {
        'custom-shipping'?:
          | T
          | {
              baseRate?: T;
              freeShippingMinOrder?: T;
              estimatedDeliveryDays?: T;
              notes?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkout-sessions_select".
 */
export interface CheckoutSessionsSelect<T extends boolean = true> {
  sessionId?: T;
  customer?: T;
  cart?: T;
  shipping?: T;
  payment?: T;
  shippingAddress?: T;
  billingAddress?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cj-settings_select".
 */
export interface CjSettingsSelect<T extends boolean = true> {
  emailAddress?: T;
  apiToken?: T;
  refreshToken?: T;
  refreshTokenExpiry?: T;
  accessToken?: T;
  accessTokenExpiry?: T;
  pod?: T;
  items?:
    | T
    | {
        productUrl?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports_select".
 */
export interface ExportsSelect<T extends boolean = true> {
  name?: T;
  format?: T;
  limit?: T;
  sort?: T;
  drafts?: T;
  selectionToUse?: T;
  fields?: T;
  collectionSlug?: T;
  where?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates_select".
 */
export interface EmailTemplatesSelect<T extends boolean = true> {
  name?: T;
  html?: T;
  json?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "store-settings".
 */
export interface StoreSetting {
  id: number;
  name?: string | null;
  currency?:
    | (
        | 'AED'
        | 'AFN'
        | 'ALL'
        | 'AMD'
        | 'ANG'
        | 'AOA'
        | 'ARS'
        | 'AUD'
        | 'AWG'
        | 'AZN'
        | 'BAM'
        | 'BBD'
        | 'BDT'
        | 'BGN'
        | 'BHD'
        | 'BIF'
        | 'BMD'
        | 'BND'
        | 'BOB'
        | 'BOV'
        | 'BRL'
        | 'BSD'
        | 'BTN'
        | 'BWP'
        | 'BYN'
        | 'BZD'
        | 'CAD'
        | 'CDF'
        | 'CHE'
        | 'CHF'
        | 'CHW'
        | 'CLF'
        | 'CLP'
        | 'CNY'
        | 'COP'
        | 'COU'
        | 'CRC'
        | 'CUC'
        | 'CUP'
        | 'CVE'
        | 'CZK'
        | 'DJF'
        | 'DKK'
        | 'DOP'
        | 'DZD'
        | 'EGP'
        | 'ERN'
        | 'ETB'
        | 'EUR'
        | 'FJD'
        | 'FKP'
        | 'GBP'
        | 'GEL'
        | 'GHS'
        | 'GIP'
        | 'GMD'
        | 'GNF'
        | 'GTQ'
        | 'GYD'
        | 'HKD'
        | 'HNL'
        | 'HTG'
        | 'HUF'
        | 'IDR'
        | 'ILS'
        | 'INR'
        | 'IQD'
        | 'IRR'
        | 'ISK'
        | 'JMD'
        | 'JOD'
        | 'JPY'
        | 'KES'
        | 'KGS'
        | 'KHR'
        | 'KMF'
        | 'KPW'
        | 'KRW'
        | 'KWD'
        | 'KYD'
        | 'KZT'
        | 'LAK'
        | 'LBP'
        | 'LKR'
        | 'LRD'
        | 'LSL'
        | 'LYD'
        | 'MAD'
        | 'MDL'
        | 'MGA'
        | 'MKD'
        | 'MMK'
        | 'MNT'
        | 'MOP'
        | 'MRU'
        | 'MUR'
        | 'MVR'
        | 'MWK'
        | 'MXN'
        | 'MXV'
        | 'MYR'
        | 'MZN'
        | 'NAD'
        | 'NGN'
        | 'NIO'
        | 'NOK'
        | 'NPR'
        | 'NZD'
        | 'OMR'
        | 'PAB'
        | 'PEN'
        | 'PGK'
        | 'PHP'
        | 'PKR'
        | 'PLN'
        | 'PYG'
        | 'QAR'
        | 'RON'
        | 'RSD'
        | 'RUB'
        | 'RWF'
        | 'SAR'
        | 'SBD'
        | 'SCR'
        | 'SDG'
        | 'SEK'
        | 'SGD'
        | 'SHP'
        | 'SLE'
        | 'SOS'
        | 'SRD'
        | 'SSP'
        | 'STN'
        | 'SVC'
        | 'SYP'
        | 'SZL'
        | 'THB'
        | 'TJS'
        | 'TMT'
        | 'TND'
        | 'TOP'
        | 'TRY'
        | 'TTD'
        | 'TWD'
        | 'TZS'
        | 'UAH'
        | 'UGX'
        | 'USD'
        | 'USN'
        | 'UYI'
        | 'UYU'
        | 'UYW'
        | 'UZS'
        | 'VED'
        | 'VES'
        | 'VND'
        | 'VUV'
        | 'WST'
        | 'XAF'
        | 'XAG'
        | 'XAU'
        | 'XBA'
        | 'XBB'
        | 'XBC'
        | 'XBD'
        | 'XCD'
        | 'XDR'
        | 'XOF'
        | 'XPD'
        | 'XPF'
        | 'XPT'
        | 'XSU'
        | 'XTS'
        | 'XUA'
        | 'XXX'
        | 'YER'
        | 'ZAR'
        | 'ZMW'
        | 'ZWG'
      )
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu".
 */
export interface MainMenu {
  id: number;
  layout: {
    form: number | Form;
    enableIntro?: boolean | null;
    introContent?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'formBlock';
  }[];
  'form-submissions'?: (number | null) | FormSubmission;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'primary' | 'secondary') | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "store-settings_select".
 */
export interface StoreSettingsSelect<T extends boolean = true> {
  name?: T;
  currency?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu_select".
 */
export interface MainMenuSelect<T extends boolean = true> {
  layout?:
    | T
    | {
        formBlock?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
      };
  'form-submissions'?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCreateCollectionExport".
 */
export interface TaskCreateCollectionExport {
  input: {
    name?: string | null;
    format: 'csv' | 'json';
    limit?: number | null;
    sort?: string | null;
    drafts?: ('yes' | 'no') | null;
    selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
    fields?: string[] | null;
    collectionSlug: string;
    where?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    user?: string | null;
    userCollection?: string | null;
    exportsCollection?: string | null;
  };
  output: {
    success?: boolean | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}